# 
# Unified definitions for PGI and Intel Compiler
#

.SUFFIXES:	# Delete the default suffixes
.SUFFIXES: .o .f .F

# Uncomment to make .f stick around:
.PRECIOUS: %.f

# Use pattern rule to indicate dependency on mpc
%.f:  mpc %.F 
	$(CPP) $(CPPFLAGS) $*.F | mpc > $@
.f.o:
	$(MPIFC) -c $(FFLAGS) $< -o $@
# clear implicit rule .F.o:
%.o: %.F

CPP = /lib/cpp 
#CPP = /lib/cpp -traditional-cpp
CPPFLAGS += -P -traditional-cpp -I$(NETCDF)/include -I${MPI_ROOT}/include
LCDF =-L$(NETCDF)/lib -lnetcdff -lnetcdf 
MPIFC = mpif90
LDR = $(MPIFC)
#
# C-preprocessor from Intel compiler package. Note: in this case
# __IFC is a pre-defined macro, so there is no need to include it
# into CPPFLAGS.
#
#     CPP = fpp

ifeq ($(notdir $(FC)),pgf90) 
   #  ============= PGI compiler settings =============
   OPENMP= # -mp
   CPPFLAGS += -DPGI 
   FFLAGS = -mcmodel=medium -fast -O4 $(OPENMP)
else 
   #  ============= Assuming Intel Ifort =============
   OPENMP = # -fpp2 -openmp
   CPPFLAGS += -D__IFC

   # Compiler 
   LARGE_MEM_FLAG=  -mcmodel=small 
   LARGE_MEM_FLAG=  -mcmodel=medium  -shared-intel
   FFLAGS = $(OPENMP) -pc80 -132 -msse2 -auto -O2 -ip -xHost -no-prec-div $(LARGE_MEM_FLAG) -p
   FFLAGS = $(OPENMP) -pc80 -132 -msse2 -auto -O2 -ip -xHost -no-prec-div $(LARGE_MEM_FLAG)
   #FFLAGS = $(OPENMP) -pc80 -132 -msse2 -O2 -ip -no-prec-div $(LARGE_MEM_FLAG)
   #FFLAGS = $(OPENMP) -pc80 -132 -msse2 -O3 $(LARGE_MEM_FLAG)
   # File to include in make clean
   COMP_FILES = work.pc work.pcl ifort*
 
   # Compiler settings:  -fpp2 is required only if -openmp is present.
   # Not having -fpp2 here just causes compiler warning (-fpp is set to
   # level 2 by -openmp), but other than that has no effect.
   #
   # Switch -pc80 increases precision of floating point operation to
   # 64 bits (vs. 53 bits double precision default).
   #
   # -qp  compiles and links for function profiling with  gprof(1);
   #      this is the same as specifying -p or -pg.
   #
   # Setting  FFLAGS = -O2 -mp (or lower optimization level) is needed
   # to pass ETALON_CHECK: -O3 causes roundoff-level differences from
   # the length of innermost i-loop (the results still pass ETALON_CHECK
   # if  NP_XI = NSUB_X = 1, regardless of partition in ETA-direction). 

   # Flags collected under LARGE_MEM_FLAG are needed only if exceeding 
   # 2 GBytes of memory: both -mcmodel (sets size of addressing pointers)
   # and -i-dynamic (ensures proper linking with Intel dynamic libraries
   # must be specified.
   # LARGE_MEM_FLAG = -mcmodel=medium 
   #
   # Some usefule debugging options 
   #   FFLAGS = -pc80 -132 -g -check all -CA -CB -CS $(LART_MEM_FLAG)
endif



